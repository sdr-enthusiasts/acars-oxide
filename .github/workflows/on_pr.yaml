---
name: Pull Request

on:
  # Enable manual running of action if necessary
  workflow_dispatch:
  # Build and test deployment the image on pushes to main branch
  pull_request:
    # # Only publish on push to main branch
    # branches:
    #   - main
    # Only run if the PR yaml, Dockerfile, sh, py or rs files have changed
    paths:
      - Dockerfile**
      - "**on_pr.yaml"
      - "**.rs"
      - "**.sh"
      - "**.toml"

jobs:
  check:
    name: Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Rust and deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libzmq3-dev librtlsdr-dev
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          components: clippy
          override: true
      - name: Install Rust and deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libzmq3-dev librtlsdr-dev
      - uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
          name: Clippy Output

  hadolint:
    name: "Linting: hadolint"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Pull hadolint/hadolint:latest Image
        run: docker pull hadolint/hadolint:latest
      - name: Run hadolint against Dockerfiles
        run: docker run --rm -i -v "$PWD":/workdir --workdir /workdir --entrypoint hadolint hadolint/hadolint --ignore DL3013 --ignore DL3008 $(find . -type f -iname "Dockerfile*")

  test_rust_functionality:
    name: Build and test rust functionality
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Install Rust and deps
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libzmq3-dev librtlsdr-dev

      - name: Run tests
        run: |
          env CARGO_NET_GIT_FETCH_WITH_CLI=true cargo test

  test_docker_image_build:
    name: Test Docker Image Build
    needs: [hadolint]
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
    with:
      docker_build_file: Dockerfile.local
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
